{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport colors from \"../assets/colors/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useFonts = useFonts({\n      'Comic': require(\"../assets/fonts/ComicNeue-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    onLayout: onLayoutRootView,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Image, {\n      source: require(\"../assets/images/firstbg.png\"),\n      style: styles.backgroundImage\n    }), _jsxs(View, {\n      style: [styles.login_container, styles.shadowProp],\n      children: [_jsx(View, {\n        style: styles.textView,\n        children: _jsx(Text, {\n          style: styles.loginHeader,\n          children: \"Giri\\u015F Yap\"\n        })\n      }), _jsx(TextInput, {\n        style: [styles.inputStyle, styles.emailInputStyle],\n        placeholder: \"Email\",\n        placeholderTextColor: '#B8B8B8',\n        keyboardType: \"text\"\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"\\u015Eifre\",\n        placeholderTextColor: '#B8B8B8',\n        keyboardType: \"text\"\n      }), _jsx(Pressable, {\n        style: styles.loginButton,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"asdsad\"\n        })\n      })]\n    })]\n  });\n};\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  login_container: {\n    backgroundColor: colors.white,\n    width: '100%',\n    height: '60%',\n    position: 'absolute',\n    bottom: 0,\n    alignItems: 'center',\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50\n  },\n  shadowProp: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 1,\n    shadowRadius: 3,\n    elevation: 13\n  },\n  inputStyle: {\n    fontFamily: 'Comic',\n    width: 350,\n    height: 55,\n    marginBottom: 30,\n    backgroundColor: colors.white,\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#DDD\",\n    paddingLeft: 25,\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 20\n  },\n  emailInputStyle: {\n    marginTop: 15\n  },\n  textView: {\n    padding: 15\n  },\n  loginHeader: {\n    fontFamily: 'Comic',\n    fontSize: 40\n  },\n  loginButton: {\n    alignItems: 'center',\n    width: 350,\n    height: 55,\n    backgroundColor: colors.yellowLight,\n    borderWidth: 2,\n    borderRadius: 15\n  },\n  loginButtonText: {\n    fontFamily: 'Comic',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useCallback","useFonts","SplashScreen","colors","Login","require","fontsLoaded","onLayoutRootView","hideAsync","styles","container","backgroundImage","login_container","shadowProp","textView","loginHeader","inputStyle","emailInputStyle","loginButton","loginButtonText","StyleSheet","create","flex","alignItems","justifyContent","resizeMode","backgroundColor","white","width","height","position","bottom","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontFamily","marginBottom","borderRadius","borderWidth","borderColor","paddingLeft","paddingTop","paddingBottom","fontSize","marginTop","padding","yellowLight","textAlign"],"sources":["D:/Belgeler HDD/Bilgi/4. Yıl/Güz/CMPE 491/Project01/Project01/components/Login.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { useCallback } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, Button, Pressable } from 'react-native';\r\nimport { useFonts } from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport colors from '../assets/colors/colors';\r\n\r\nconst Login = () => {\r\n    /*const [fontsLoaded] = useFonts({\r\n      'Comic': require('./assets/fonts/ComicNeue-Regular.ttf')\r\n    })*/\r\n\r\n    /*let [fontsLoaded] = useFonts({\r\n      'Comic': require('./assets/fonts/ComicNeue-Regular.ttf'),\r\n    });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading/>;\r\n    }*/\r\n\r\n    const [fontsLoaded] = useFonts({\r\n        'Comic': require('../assets/fonts/ComicNeue-Regular.ttf'),\r\n    });\r\n\r\n    const onLayoutRootView = useCallback(async () => {\r\n        if (fontsLoaded) {\r\n            await SplashScreen.hideAsync();\r\n        }\r\n    }, [fontsLoaded]);\r\n\r\n    if (!fontsLoaded) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container} onLayout={onLayoutRootView}>\r\n            <StatusBar style=\"auto\" />\r\n            <Image source={require('../assets/images/firstbg.png')} style={styles.backgroundImage} />\r\n            <View style={[styles.login_container, styles.shadowProp]}>\r\n                <View style={styles.textView}>\r\n                    <Text style={styles.loginHeader}>Giriş Yap</Text>\r\n                </View>\r\n\r\n                <TextInput\r\n                    style={[styles.inputStyle, styles.emailInputStyle]}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor={'#B8B8B8'}\r\n                    keyboardType=\"text\"\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.inputStyle}\r\n                    placeholder=\"Şifre\"\r\n                    placeholderTextColor={'#B8B8B8'}\r\n                    keyboardType=\"text\"\r\n                />\r\n\r\n                <Pressable style={styles.loginButton}>\r\n                    <Text style={styles.loginButtonText}>{\"asdsad\"}</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n\r\n    login_container: {\r\n        backgroundColor: colors.white,\r\n        width: '100%',\r\n        height: '60%',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 50,\r\n        borderTopRightRadius: 50,\r\n    },\r\n\r\n    shadowProp: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 1,\r\n        shadowRadius: 3,\r\n        elevation: 13,\r\n    },\r\n\r\n    inputStyle: {\r\n        fontFamily: 'Comic',\r\n        width: 350,\r\n        height: 55,\r\n        marginBottom: 30,\r\n        backgroundColor: colors.white,\r\n        borderRadius: 15,\r\n        borderWidth: 2,\r\n        borderColor: \"#DDD\",\r\n        paddingLeft: 25,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        fontSize: 20,\r\n    },\r\n\r\n    emailInputStyle: {\r\n        marginTop: 15,\r\n\r\n    },\r\n\r\n    textView: {\r\n        padding: 15,\r\n    },\r\n\r\n    loginHeader: {\r\n        fontFamily: 'Comic',\r\n        fontSize: 40,\r\n    },\r\n\r\n    loginButton: {\r\n        alignItems: 'center',\r\n        width: 350,\r\n        height: 55,\r\n        backgroundColor: colors.yellowLight,\r\n        borderWidth: 2,\r\n        borderRadius: 15,\r\n\r\n    },\r\n\r\n    loginButtonText: {\r\n        fontFamily: 'Comic',\r\n        textAlign: 'center',\r\n\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}